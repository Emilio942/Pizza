# SPATIAL-6.2: Nginx Production Configuration
# Load balancing and reverse proxy for pizza classification API

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    # Upstream configuration
    upstream pizza_api {
        least_conn;
        server pizza-api:8001 max_fails=3 fail_timeout=30s;
        # Add more servers here for horizontal scaling
        # server pizza-api-2:8001 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        server_name _;

        # Rate limiting
        limit_req zone=api burst=20 nodelay;

        # Client max body size (for image uploads)
        client_max_body_size 10M;

        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # API endpoints
        location / {
            proxy_pass http://pizza_api;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Add headers for debugging
            add_header X-Upstream-Addr $upstream_addr always;
            add_header X-Response-Time $upstream_response_time always;
        }

        # Health check endpoint (direct)
        location /health {
            proxy_pass http://pizza_api/health;
            access_log off;
        }

        # Status endpoint (protected)
        location /status {
            proxy_pass http://pizza_api/status;
            # Optional: Add IP restriction
            # allow 127.0.0.1;
            # deny all;
        }

        # Nginx status (for monitoring)
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.0.0.0/8;  # Docker networks
            deny all;
        }
    }
}
