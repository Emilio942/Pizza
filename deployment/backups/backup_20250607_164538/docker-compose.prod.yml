# SPATIAL-6.2: Production Docker Compose Configuration
# Complete production deployment with monitoring stack

version: '3.8'

services:
  # Main Pizza Classification API
  pizza-api:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.prod
    container_name: pizza-classification-api
    ports:
      - "8001:8001"
    environment:
      - DEPLOYMENT_MODE=production
      - PROMETHEUS_ENABLED=true
    env_file:
      - production.env
    volumes:
      - ../models:/app/models:ro
      - pizza-logs:/app/logs
    networks:
      - pizza-network
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: pizza-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-logs:/var/log/nginx
    networks:
      - pizza-network
    depends_on:
      - pizza-api
    restart: unless-stopped

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: pizza-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - pizza-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped

  # Grafana Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: pizza-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
      - ./grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml:ro
      - ./dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - pizza-network
    depends_on:
      - prometheus
    restart: unless-stopped

networks:
  pizza-network:
    driver: bridge

volumes:
  pizza-logs:
  nginx-logs:
  prometheus-data:
  grafana-data:
