# Nginx Configuration for Spatial-MLLM Load Balancing
# Part of SPATIAL-4.2: Deployment-Pipeline erweitern

# Main HTTP configuration
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # Upstream configuration for Spatial-MLLM API servers
    upstream spatial_api_backend {
        # Load balancing method
        least_conn;
        
        # API server instances
        server spatial-api-1:8000 max_fails=3 fail_timeout=30s weight=1;
        server spatial-api-2:8000 max_fails=3 fail_timeout=30s weight=1;
        server spatial-api-3:8000 max_fails=3 fail_timeout=30s weight=1;
        
        # Health check
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }
    
    # Upstream configuration for monitoring services
    upstream monitoring_backend {
        server prometheus:9090;
    }
    
    upstream grafana_backend {
        server grafana:3000;
    }
    
    # Cache configuration
    proxy_cache_path /var/cache/nginx/spatial levels=1:2 keys_zone=spatial_cache:100m 
                     max_size=1g inactive=60m use_temp_path=off;
    
    # Main server configuration
    server {
        listen 80;
        listen [::]:80;
        server_name localhost spatial.pizza.local;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API endpoints with load balancing
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Proxy settings
            proxy_pass http://spatial_api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # Cache configuration for GET requests
            proxy_cache spatial_cache;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
            proxy_cache_revalidate on;
            proxy_cache_lock on;
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            
            # Add cache status header
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # File upload endpoint with special handling
        location /api/upload {
            # Rate limiting for uploads
            limit_req zone=upload burst=5 nodelay;
            
            # Increase client body buffer size for file uploads
            client_body_buffer_size 128k;
            client_body_timeout 60s;
            
            # Proxy settings
            proxy_pass http://spatial_api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for file processing
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Disable caching for uploads
            proxy_cache off;
        }
        
        # Spatial-specific endpoints
        location /api/spatial/ {
            # Rate limiting
            limit_req zone=api burst=10 nodelay;
            
            # Proxy settings
            proxy_pass http://spatial_api_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for AI processing
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # No caching for AI responses
            proxy_cache off;
            
            # Add special headers for spatial processing
            add_header X-Spatial-Processing "enabled";
        }
        
        # WebSocket support for real-time features
        location /ws/ {
            proxy_pass http://spatial_api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
        }
        
        # Monitoring endpoints
        location /monitoring/ {
            # Basic auth protection (configure as needed)
            # auth_basic "Monitoring Access";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://monitoring_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /grafana/ {
            # Basic auth protection (configure as needed)
            # auth_basic "Grafana Access";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://grafana_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Static files (if any)
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Gzip for static files
            gzip_static on;
        }
        
        # Root location
        location / {
            return 200 "Spatial-MLLM Pizza API Load Balancer\nStatus: Online\nVersion: 1.0.0\n";
            add_header Content-Type text/plain;
        }
    }
    
    # HTTPS server configuration (optional, for production)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name spatial.pizza.local;
        
        # SSL configuration (update paths as needed)
        ssl_certificate /etc/ssl/certs/spatial.crt;
        ssl_certificate_key /etc/ssl/private/spatial.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        
        # Modern configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000" always;
        
        # Same configuration as HTTP server
        include /etc/nginx/conf.d/spatial-common.conf;
    }
    
    # Server status page for monitoring
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }
}
